{"ast":null,"code":"var _jsxFileName = \"/Users/jeffrey/WebstormProjects/todo-list-app/src/components/TodoItem.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nexport class TodoItem extends Component {\n  render() {\n    const _this$props$todo = this.props.todo,\n          id = _this$props$todo.id,\n          title = _this$props$todo.title;\n    return React.createElement(\"div\", {\n      style: this.getStyle(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      onChange: this.props.toggleComplete.bind(this, id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }), title, React.createElement(\"button\", {\n      onClick: this.props.delTodo.bind(this.props).bind(this, id),\n      style: btnStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"x\")));\n  }\n\n  getStyle() {\n    return {\n      backgroundColor: '#f4f4f4',\n      padding: '10px',\n      boarderBottom: '1px #ccc dotted',\n      textDecoration: this.props.todo.completed ? 'line-through' : 'none'\n    };\n  }\n\n} // Proptypes\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired\n};\nconst btnStyle = {\n  background: '#ff0000',\n  color: '#fff',\n  border: 'none',\n  borderRadius: '50%',\n  padding: '5px 9px',\n  cursor: 'pointer',\n  float: 'right'\n};\nexport default TodoItem;","map":{"version":3,"sources":["/Users/jeffrey/WebstormProjects/todo-list-app/src/components/TodoItem.js"],"names":["React","Component","PropTypes","TodoItem","render","props","todo","id","title","getStyle","toggleComplete","bind","delTodo","btnStyle","backgroundColor","padding","boarderBottom","textDecoration","completed","propTypes","object","isRequired","background","color","border","borderRadius","cursor","float"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AACpCG,EAAAA,MAAM,GAAG;AAAA,6BACiB,KAAKC,KAAL,CAAWC,IAD5B;AAAA,UACGC,EADH,oBACGA,EADH;AAAA,UACOC,KADP,oBACOA,KADP;AAEL,WACI;AAAK,MAAA,KAAK,EAAE,KAAKC,QAAL,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,UAAZ;AACO,MAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWK,cAAX,CAA0BC,IAA1B,CAA+B,IAA/B,EAAqCJ,EAArC,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAIMC,KAJN,EAKI;AACI,MAAA,OAAO,EAAE,KAAKH,KAAL,CAAWO,OAAX,CAAmBD,IAAnB,CAAwB,KAAKN,KAA7B,EAAoCM,IAApC,CAAyC,IAAzC,EAA+CJ,EAA/C,CADb;AAEI,MAAA,KAAK,EAAEM,QAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALJ,CADJ,CADJ;AAeH;;AAEDJ,EAAAA,QAAQ,GAAG;AACP,WAAO;AACHK,MAAAA,eAAe,EAAE,SADd;AAEHC,MAAAA,OAAO,EAAE,MAFN;AAGHC,MAAAA,aAAa,EAAE,iBAHZ;AAIHC,MAAAA,cAAc,EAAE,KAAKZ,KAAL,CAAWC,IAAX,CAAgBY,SAAhB,GAA4B,cAA5B,GAA6C;AAJ1D,KAAP;AAMH;;AA3BmC,C,CA8BxC;;AACAf,QAAQ,CAACgB,SAAT,GAAqB;AACjBb,EAAAA,IAAI,EAAEJ,SAAS,CAACkB,MAAV,CAAiBC;AADN,CAArB;AAIA,MAAMR,QAAQ,GAAG;AACbS,EAAAA,UAAU,EAAE,SADC;AAEbC,EAAAA,KAAK,EAAE,MAFM;AAGbC,EAAAA,MAAM,EAAE,MAHK;AAIbC,EAAAA,YAAY,EAAE,KAJD;AAKbV,EAAAA,OAAO,EAAE,SALI;AAMbW,EAAAA,MAAM,EAAE,SANK;AAObC,EAAAA,KAAK,EAAE;AAPM,CAAjB;AAUA,eAAexB,QAAf","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types'\n\nexport class TodoItem extends Component {\n    render() {\n        const { id, title } = this.props.todo;\n        return (\n            <div style={this.getStyle()}>\n                <p>\n                    <input type=\"checkbox\"\n                           onChange={this.props.toggleComplete.bind(this, id)}\n                    />\n                    { title }\n                    <button\n                        onClick={this.props.delTodo.bind(this.props).bind(this, id)}\n                        style={btnStyle}>\n                        x\n                    </button>\n                </p>\n            </div>\n        )\n    }\n\n    getStyle() {\n        return {\n            backgroundColor: '#f4f4f4',\n            padding: '10px',\n            boarderBottom: '1px #ccc dotted',\n            textDecoration: this.props.todo.completed ? 'line-through' : 'none'\n        };\n    }\n}\n\n// Proptypes\nTodoItem.propTypes = {\n    todo: PropTypes.object.isRequired\n};\n\nconst btnStyle = {\n    background: '#ff0000',\n    color: '#fff',\n    border: 'none',\n    borderRadius: '50%',\n    padding: '5px 9px',\n    cursor: 'pointer',\n    float: 'right'\n};\n\nexport default TodoItem\n"]},"metadata":{},"sourceType":"module"}